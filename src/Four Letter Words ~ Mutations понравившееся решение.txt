import java.util.*;

public class Solution {
  private static String find(Set<String> used, String[] words, String word) {
    for (String w : words) {
      if (!used.contains(w) && w.chars().distinct().count() == 4) {
        int c = 0;
        for (int i = 0; i < 4; i++) {
          c += word.charAt(i) != w.charAt(i) ? 1 : 0;
        }
        if (c == 1) return w;
      }
    }
    return null;
  }
  
  public static int mutations(String[] alice, String[] bob, String word, int first) {
    var used = new HashSet<String>();
    var players = new String[][] { alice, bob };
    used.add(word);
    for (int i = 0;; i++) {
      String next = find(used, players[first], word);
      first ^= 1;
      if (next == null) {
        return i > 0 || find(used, players[first], word) != null ? first : -1;
      }
      used.add(next);
      word = next;
    }
  }
}